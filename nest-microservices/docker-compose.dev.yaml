version: '3.7'
services:
#  postgres:
#    container_name: postgres
#    image: postgres
#    restart: always
#    ports:
#      - '5432:5432'
#    environment:
#      POSTGRES_USER: root
#      POSTGRES_PASSWORD: password
#      POSTGRES_DB: nest_microservices
#
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER}" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#
#  redis:
#    container_name: redis
#    image: redis
#    restart: always
#    ports:
#      - '6379:6379'
#
#    healthcheck:
#      test: [ "CMD", "redis-cli", "ping" ]
#      interval: 10s
#      timeout: 5s
#      retries: 3

  api-gateway:
    container_name: api-gateway
    build:
      context: ./api-gateway
      target: development # use it to build the development image
    volumes:
      - ./api-gateway:/app
    ports:
      - '3000:3000'
    command: npm run start:debug # for clarity
    depends_on:
      - service-a
#      - service-b

  service-a:
    container_name: service-a
    build:
      context: ./service-a
      target: development
    volumes:
        - ./service-a:/app
    ports:
      - '3001:3001'
    environment:
      DATABASE_URL: postgresql://root:password@postgres:5432/nest_microservices
#    command: npm run start:dev # for clarity
#    depends_on:
#      - postgres

#  service-b:
#    container_name: service-b
#    build: ./service-b
#    ports:
#      - '3002:3002'
#    command: npm run start:dev # for clarity
#    depends_on:
#      - redis


volumes:
  postgres_data: